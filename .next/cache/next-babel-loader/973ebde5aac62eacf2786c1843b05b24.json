{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aurelien/repo/next-ts-template/components/fullScreenBtnSlider.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Icon from \"@mdi/react\";\nimport { mdiFullscreen } from \"@mdi/js\";\n\nvar FullScreenBtnSlider = /*#__PURE__*/function (_React$Component) {\n  _inherits(FullScreenBtnSlider, _React$Component);\n\n  var _super = _createSuper(FullScreenBtnSlider);\n\n  function FullScreenBtnSlider() {\n    _classCallCheck(this, FullScreenBtnSlider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FullScreenBtnSlider, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-full-screen-btn-container\",\n        onClick: this.props.action,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiFullscreen,\n          title: \"Plein écran\",\n          size: 3,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return FullScreenBtnSlider;\n}(React.Component);\n\nexport { FullScreenBtnSlider as default };","map":{"version":3,"sources":["/home/aurelien/repo/next-ts-template/components/fullScreenBtnSlider.tsx"],"names":["React","Icon","mdiFullscreen","FullScreenBtnSlider","props","action","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,aAAT,QAAiD,SAAjD;;IAYqBC,mB;;;;;;;;;;;;;6BACX;AACR,0BACC;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAkD,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,MAAtE;AAAA,+BACC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEH,aAAZ;AAA2B,UAAA,KAAK,EAAE,aAAlC;AAAiD,UAAA,IAAI,EAAE,CAAvD;AAA0D,UAAA,KAAK,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAKA;;;;EAP+CF,KAAK,CAACM,S;;SAAlCH,mB","sourcesContent":["import React, { Component } from 'react'\n\nimport Icon from \"@mdi/react\";\nimport { mdiFullscreen, mdiFullscreenExit } from \"@mdi/js\";\n\ninterface Props {\n    fullScreen:Boolean;\n    // optionalParam?:number;\n  //empty in our case\n}\n\ninterface State {\n  //empty in our case\n}\n\nexport default class FullScreenBtnSlider extends React.Component<Props, State> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"slider-full-screen-btn-container\" onClick={this.props.action}>\n\t\t\t\t<Icon path={mdiFullscreen} title={\"Plein écran\"} size={3} color=\"white\"/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}