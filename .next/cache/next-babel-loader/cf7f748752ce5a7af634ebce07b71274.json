{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aurelien/repo/next-ts-template/components/logo.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/Home.module.css';\nimport Icon from \"@mdi/react\";\nimport { mdiEyeOff } from \"@mdi/js\";\n\nconst renderLogo = props => {\n  const size = useWindowSize();\n\n  if (size.width <= 1280) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerBufferLogo,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  } else if (props.visible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerBufferLogo,\n      children: [size.width < size.height ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\",\n        className: styles.logoThinImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiEyeOff,\n          title: \"Masquer le logo\",\n          size: 2,\n          color: true ? \"white\" : getComputedStyle(document.documentElement).getPropertyValue('--mainColor')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this);\n  } else {\n    return null;\n  }\n};\n\nexport default renderLogo; // Hook\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (false) {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}","map":{"version":3,"sources":["/home/aurelien/repo/next-ts-template/components/logo.tsx"],"names":["React","useState","useEffect","styles","Icon","mdiEyeOff","renderLogo","props","size","useWindowSize","width","containerBufferLogo","visible","height","logoThinImage","getComputedStyle","document","documentElement","getPropertyValue","windowSize","setWindowSize","undefined","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAOA,MAAMC,UAAU,GAAIC,KAAD,IAAmB;AAClC,QAAMC,IAAI,GAAGC,aAAa,EAA1B;;AACA,MAAID,IAAI,CAACE,KAAL,IAAc,IAAlB,EAAwB;AAC1B,wBACO;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACQ,mBAAvB;AAAA,6BACC;AAAK,QAAA,GAAG,EAAE,UAAV;AAAsB,QAAA,GAAG,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADP;AAKG,GAND,MAMO,IAAIJ,KAAK,CAACK,OAAV,EAAmB;AACzB,wBACI;AAAK,MAAA,SAAS,EAAET,MAAM,CAACQ,mBAAvB;AAAA,iBACIH,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACK,MAAlB,gBACF;AAAK,QAAA,GAAG,EAAE,UAAV;AAAsB,QAAA,GAAG,EAAE,MAA3B;AAAmC,QAAA,SAAS,EAAEV,MAAM,CAACW;AAArD;AAAA;AAAA;AAAA;AAAA,cADE,gBAGF;AAAK,QAAA,GAAG,EAAE,UAAV;AAAsB,QAAA,GAAG,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA,+BACD,QAAC,IAAD;AAAM,UAAA,IAAI,EAAET,SAAZ;AAAuB,UAAA,KAAK,EAAE,iBAA9B;AAAiD,UAAA,IAAI,EAAE,CAAvD;AAA0D,UAAA,KAAK,EAAE,OAAgC,OAAhC,GAA0CU,gBAAgB,CAACC,QAAQ,CAACC,eAAV,CAAhB,CAA2CC,gBAA3C,CAA4D,aAA5D;AAA3G;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYA,GAbM,MAaA;AACN,WAAO,IAAP;AACA;AACJ,CAxBD;;AAyBA,eAAeZ,UAAf,C,CAGA;;AACA,SAASG,aAAT,GAAyB;AACxB;AACA;AACA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA8BnB,QAAQ,CAAC;AAC5CS,IAAAA,KAAK,EAAEW,SADqC;AAE5CR,IAAAA,MAAM,EAAEQ;AAFoC,GAAD,CAA5C;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,eAAmC;AAClC;AACA,eAASoB,YAAT,GAAwB;AACvB;AACAF,QAAAA,aAAa,CAAC;AACbV,UAAAA,KAAK,EAAEa,MAAM,CAACC,UADD;AAEbX,UAAAA,MAAM,EAAEU,MAAM,CAACE;AAFF,SAAD,CAAb;AAIA,OARiC,CASlC;;;AACAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVkC,CAWlC;;AACAA,MAAAA,YAAY,GAZsB,CAalC;;AACA,aAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACA;AACD,GAlBQ,EAkBN,EAlBM,CAAT,CAPwB,CAyBhB;;AACR,SAAOH,UAAP;AACA","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport styles from '../styles/Home.module.css'\n\nimport Icon from \"@mdi/react\";\nimport { mdiEyeOff } from \"@mdi/js\";\n\ninterface IProps {\n    visible: Boolean;\n    action: any;\n}\n\nconst renderLogo = (props: IProps) => {\n    const size = useWindowSize();\n    if (size.width <= 1280) {\n\t\treturn (\n\t        <div className={styles.containerBufferLogo}>\n        \t\t<img src={\"logo.png\"} alt={\"logo\"}/>\n\t        </div>\n\t\t);\n    } else if (props.visible) {\n    \treturn (\n\t        <div className={styles.containerBufferLogo}>\n\t          \t{size.width < size.height ?\n\t        \t\t<img src={\"logo.png\"} alt={\"logo\"} className={styles.logoThinImage}/>\n\t        \t:\n\t        \t\t<img src={\"logo.png\"} alt={\"logo\"}/>\n\t        \t}\n\t          <p>\n\t\t        <Icon path={mdiEyeOff} title={\"Masquer le logo\"} size={2} color={typeof window === \"undefined\" ? \"white\" : getComputedStyle(document.documentElement).getPropertyValue('--mainColor')}/>\n\t          </p>\n\t        </div>\n\t\t);\n    } else {\n    \treturn null;\n    }\n}\nexport default renderLogo;\n\n\n// Hook\nfunction useWindowSize() {\n\t// Initialize state with undefined width/height so server and client renders match\n\t// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t});\n\tuseEffect(() => {\n\t\t// only execute all the code below in client side\n\t\tif (typeof window !== 'undefined') {\n\t\t\t// Handler to call on window resize\n\t\t\tfunction handleResize() {\n\t\t\t\t// Set window width/height to state\n\t\t\t\tsetWindowSize({\n\t\t\t\t\twidth: window.innerWidth,\n\t\t\t\t\theight: window.innerHeight,\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Add event listener\n\t\t\twindow.addEventListener(\"resize\", handleResize);\n\t\t\t// Call handler right away so state gets updated with initial window size\n\t\t\thandleResize();\n\t\t\t// Remove event listener on cleanup\n\t\t\treturn () => window.removeEventListener(\"resize\", handleResize);\n\t\t}\n\t}, []); // Empty array ensures that effect is only run on mount\n\treturn windowSize;\n}"]},"metadata":{},"sourceType":"module"}