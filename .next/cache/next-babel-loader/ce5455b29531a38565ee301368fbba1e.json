{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aurelien/repo/next-ts-template/components/fullScreenBtnSlider.tsx\";\nimport React from 'react';\nimport Icon from \"@mdi/react\";\nimport { mdiFullscreen, mdiFullscreenExit } from \"@mdi/js\";\nexport default class FullScreenBtnSlider extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.fullScreen ? \"slider-full-screen-btn-container-full-screen\" : \"slider-full-screen-btn-container\",\n      onClick: this.props.action,\n      children: this.props.fullScreen ? /*#__PURE__*/_jsxDEV(Icon, {\n        path: mdiFullscreenExit,\n        title: \"Ecran réduit\",\n        size: 5,\n        color: getComputedStyle(document.documentElement).getPropertyValue('--mainColor')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n        path: mdiFullscreen,\n        title: \"Plein écran\",\n        size: 3,\n        color: getComputedStyle(document.documentElement).getPropertyValue('--mainColor')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aurelien/repo/next-ts-template/components/fullScreenBtnSlider.tsx"],"names":["React","Icon","mdiFullscreen","mdiFullscreenExit","FullScreenBtnSlider","Component","render","props","fullScreen","action","getComputedStyle","document","documentElement","getPropertyValue"],"mappings":";;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,SAAjD;AAaA,eAAe,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAgE;AAC9EC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,UAAX,GAAwB,8CAAxB,GAAyE,kCAAzF;AAA6H,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,MAAjJ;AAAA,gBACE,KAAKF,KAAL,CAAWC,UAAX,gBACA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEL,iBAAZ;AAA+B,QAAA,KAAK,EAAE,cAAtC;AAAsD,QAAA,IAAI,EAAE,CAA5D;AAA+D,QAAA,KAAK,EAAEO,gBAAgB,CAACC,QAAQ,CAACC,eAAV,CAAhB,CAA2CC,gBAA3C,CAA4D,aAA5D;AAAtE;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEX,aAAZ;AAA2B,QAAA,KAAK,EAAE,aAAlC;AAAiD,QAAA,IAAI,EAAE,CAAvD;AAA0D,QAAA,KAAK,EAAEQ,gBAAgB,CAACC,QAAQ,CAACC,eAAV,CAAhB,CAA2CC,gBAA3C,CAA4D,aAA5D;AAAjE;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAX6E","sourcesContent":["import React, { Component } from 'react'\n\nimport Icon from \"@mdi/react\";\nimport { mdiFullscreen, mdiFullscreenExit } from \"@mdi/js\";\n\ninterface Props {\n    action:any;\n    fullScreen:Boolean;\n    // optionalParam?:number;\n  //empty in our case\n}\n\ninterface State {\n  //empty in our case\n}\n\nexport default class FullScreenBtnSlider extends React.Component<Props, State> {\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.fullScreen ? \"slider-full-screen-btn-container-full-screen\" : \"slider-full-screen-btn-container\"} onClick={this.props.action}>\n\t\t\t\t{this.props.fullScreen?\n\t\t\t\t\t<Icon path={mdiFullscreenExit} title={\"Ecran réduit\"} size={5} color={getComputedStyle(document.documentElement).getPropertyValue('--mainColor')}/>\n\t\t\t\t:\n\t\t\t\t\t<Icon path={mdiFullscreen} title={\"Plein écran\"} size={3} color={getComputedStyle(document.documentElement).getPropertyValue('--mainColor')}/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}