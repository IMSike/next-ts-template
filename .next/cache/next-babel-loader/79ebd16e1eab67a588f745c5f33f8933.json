{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aurelien/repo/next-ts-template/components/logo.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/Home.module.css';\nimport Icon from \"@mdi/react\";\nimport { mdiEyeOff } from \"@mdi/js\";\n\nvar renderLogo = function renderLogo(props) {\n  _s();\n\n  var size = useWindowSize();\n  console.log(\"size : \", size);\n  console.log(\"typeof height : \", typeof size.height);\n\n  if (size.width <= 1280) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerBufferLogo,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, _this);\n  } else if (props.visible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerBufferLogo,\n      children: [size.width < size.height ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\",\n        className: styles.logoThinImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiEyeOff,\n          title: \"Masquer le logo\",\n          size: 2,\n          color: false ? \"white\" : getComputedStyle(document.documentElement).getPropertyValue('--mainColor')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, _this);\n  } else {\n    return null;\n  }\n};\n\n_s(renderLogo, \"/dTDjnwlNGsRzu12Dr5t7HJe8sA=\", false, function () {\n  return [useWindowSize];\n});\n\nexport default renderLogo; // Hook\n\nfunction useWindowSize() {\n  _s2();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    // only execute all the code below in client side\n    if (true) {\n      // Handler to call on window resize\n      var handleResize = function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }; // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return function () {\n        return window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s2(useWindowSize, \"J9BENybIGqNw0/U+xsdkGfZ/Kpg=\");","map":{"version":3,"sources":["/home/aurelien/repo/next-ts-template/components/logo.tsx"],"names":["React","useState","useEffect","styles","Icon","mdiEyeOff","renderLogo","props","size","useWindowSize","console","log","height","width","containerBufferLogo","visible","logoThinImage","getComputedStyle","document","documentElement","getPropertyValue","undefined","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAmB;AAAA;;AAClC,MAAMC,IAAI,GAAGC,aAAa,EAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,OAAOH,IAAI,CAACI,MAA5C;;AACA,MAAIJ,IAAI,CAACK,KAAL,IAAc,IAAlB,EAAwB;AAC1B,wBACO;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,mBAAvB;AAAA,6BACC;AAAK,QAAA,GAAG,EAAE,UAAV;AAAsB,QAAA,GAAG,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aADP;AAKG,GAND,MAMO,IAAIP,KAAK,CAACQ,OAAV,EAAmB;AACzB,wBACI;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACW,mBAAvB;AAAA,iBACIN,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACI,MAAlB,gBACF;AAAK,QAAA,GAAG,EAAE,UAAV;AAAsB,QAAA,GAAG,EAAE,MAA3B;AAAmC,QAAA,SAAS,EAAET,MAAM,CAACa;AAArD;AAAA;AAAA;AAAA;AAAA,eADE,gBAGF;AAAK,QAAA,GAAG,EAAE,UAAV;AAAsB,QAAA,GAAG,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,eAJF,eAME;AAAA,+BACD,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEX,SAAZ;AAAuB,UAAA,KAAK,EAAE,iBAA9B;AAAiD,UAAA,IAAI,EAAE,CAAvD;AAA0D,UAAA,KAAK,EAAE,QAAgC,OAAhC,GAA0CY,gBAAgB,CAACC,QAAQ,CAACC,eAAV,CAAhB,CAA2CC,gBAA3C,CAA4D,aAA5D;AAA3G;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAYA,GAbM,MAaA;AACN,WAAO,IAAP;AACA;AACJ,CA1BD;;GAAMd,U;UACWG,a;;;AA0BjB,eAAeH,UAAf,C,CAGA;;AACA,SAASG,aAAT,GAAyB;AAAA;;AACxB;AACA;AAFwB,kBAGYR,QAAQ,CAAC;AAC5CY,IAAAA,KAAK,EAAEQ,SADqC;AAE5CT,IAAAA,MAAM,EAAES;AAFoC,GAAD,CAHpB;AAAA,MAGjBC,UAHiB;AAAA,MAGLC,aAHK;;AAOxBrB,EAAAA,SAAS,CAAC,YAAM;AACf;AACA,cAAmC;AAClC;AADkC,UAEzBsB,YAFyB,GAElC,SAASA,YAAT,GAAwB;AACvB;AACAD,QAAAA,aAAa,CAAC;AACbV,UAAAA,KAAK,EAAEY,MAAM,CAACC,UADD;AAEbd,UAAAA,MAAM,EAAEa,MAAM,CAACE;AAFF,SAAD,CAAb;AAIA,OARiC,EASlC;;;AACAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVkC,CAWlC;;AACAA,MAAAA,YAAY,GAZsB,CAalC;;AACA,aAAO;AAAA,eAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,OAAP;AACA;AACD,GAlBQ,EAkBN,EAlBM,CAAT,CAPwB,CAyBhB;;AACR,SAAOF,UAAP;AACA;;IA3BQb,a","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport styles from '../styles/Home.module.css'\n\nimport Icon from \"@mdi/react\";\nimport { mdiEyeOff } from \"@mdi/js\";\n\ninterface IProps {\n    visible: Boolean;\n}\n\nconst renderLogo = (props: IProps) => {\n    const size = useWindowSize();\n    console.log(\"size : \", size)\n    console.log(\"typeof height : \", typeof size.height)\n    if (size.width <= 1280) {\n\t\treturn (\n\t        <div className={styles.containerBufferLogo}>\n        \t\t<img src={\"logo.png\"} alt={\"logo\"}/>\n\t        </div>\n\t\t);\n    } else if (props.visible) {\n    \treturn (\n\t        <div className={styles.containerBufferLogo}>\n\t          \t{size.width < size.height ?\n\t        \t\t<img src={\"logo.png\"} alt={\"logo\"} className={styles.logoThinImage}/>\n\t        \t:\n\t        \t\t<img src={\"logo.png\"} alt={\"logo\"}/>\n\t        \t}\n\t          <p>\n\t\t        <Icon path={mdiEyeOff} title={\"Masquer le logo\"} size={2} color={typeof window === \"undefined\" ? \"white\" : getComputedStyle(document.documentElement).getPropertyValue('--mainColor')}/>\n\t          </p>\n\t        </div>\n\t\t);\n    } else {\n    \treturn null;\n    }\n}\nexport default renderLogo;\n\n\n// Hook\nfunction useWindowSize() {\n\t// Initialize state with undefined width/height so server and client renders match\n\t// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n\tconst [windowSize, setWindowSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t});\n\tuseEffect(() => {\n\t\t// only execute all the code below in client side\n\t\tif (typeof window !== 'undefined') {\n\t\t\t// Handler to call on window resize\n\t\t\tfunction handleResize() {\n\t\t\t\t// Set window width/height to state\n\t\t\t\tsetWindowSize({\n\t\t\t\t\twidth: window.innerWidth,\n\t\t\t\t\theight: window.innerHeight,\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Add event listener\n\t\t\twindow.addEventListener(\"resize\", handleResize);\n\t\t\t// Call handler right away so state gets updated with initial window size\n\t\t\thandleResize();\n\t\t\t// Remove event listener on cleanup\n\t\t\treturn () => window.removeEventListener(\"resize\", handleResize);\n\t\t}\n\t}, []); // Empty array ensures that effect is only run on mount\n\treturn windowSize;\n}"]},"metadata":{},"sourceType":"module"}